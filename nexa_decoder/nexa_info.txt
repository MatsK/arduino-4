Observations of the 433MHz Nexa communication
=============================================

The receiver is noisy. When there is no signal, the output from the
receiver seems to be random noise. However, when a Nexa command is being
transmitted, the signal seems "somewhat less noisy". There seems to be a
fairly regular pulse train, often ending for a LOW state for up to ~100ms,
before the signal reverts to noise.

During a command sequence, the HIGH states are usually 300-400µs long,
while the LOW states are either ~200µs, ~1200µs, ~2600µs, or 10000µs long.

- A command sequence has at least 3 repetitions of the same command.
- Each command starts with ~10.2ms LOW pulse
- Each command is ~77-81ms long and consists of exactly 132 L/H pulses
- Between repeated commands, corresponding pulses deviates less than 100µs
  from their average.
- Between repeated commands, the total command length deviates less than
  60µs from the average.

- All HIGH pulses are on average ~310µs long, within ~248µs to ~432µs.
- All LOW pulses fall into one of the following categories (pulse lengths
  are given as min / avg / max in µs):
	A. 10080 / 10150 / 10208 (One per command, This is the first LOW
				  pulse that introduces the command)
	B.  2592 /  2643 /  2692 (One per command, This is the second LOW
				  pulse in every command)
	X.  1132 /  1236 /  1300 (There are 32 of these in every command)
	Y.    44 /   215 /   284 (There are 32 of these in every command)

The shorter LOW-pulses (X and Y) always appear in pairs (obviously with
HIGH pulses in between), either X followed by Y, or Y followed by X.

So we seem to have the following sync pattern introducing each command:
                                           ____                  ____
  ________________________________________|    |________________|    |
                  ~10 150µs               ~310µs    ~2 643µs    ~310µs

Or abbreviated to: A-H-B-H

Furthermore we have two more waveform, combinations of which make up the
rest of the command:
         ____                  ____
     ___|    |________________|    |
 ~215µs ~310µs    ~1 236µs    ~310µs

Abbreviated to: Y-H-X-H
                      ____     ____
     ________________|    |___|    |
        ~1 236µs  ~310µs ~215µs ~310µs

Abbreviated to: X-H-Y-H

Let's assume these waveforms represents one data bit each, and let's
arbitrarily call them the 0-bit and 1-bit, respectively.

We can then summarize our findings as follows:
- Each command starts with the following sync pattern: A-H-B-H
- Then follows 32 data bits, each bit formatted as:
	0: Y-H-X-H
	1: X-H-Y-H
- Each command is repeated at least thrice.

From this, we can start constructing an algorithm for decoding the
incoming signal into 32-bit command packets.

The above works well for most modern Nexa systems, however, the older Nexa
wall switches with "manual code wheels" (marked A-O and 1-15, respectively)
is not recognized by the above scheme. Back to the oscilloscope:
- Pressing ON on unused wall switch WST-512 #1 (13/M):
	- 10.9 ms LOW (= SYNC)
	- 0.35ms HIGH -> 1.05ms LOW x 5 (= 0)
	- 1.08ms HIGH -> 0.35ms LOW (= 1)
	- 0.35ms HIGH -> 1.05ms LOW (= 0)
	- ...
	- Binary code: SYNC -> 0000010100000101000101010
- Pressing OFF on unused wall switch WST-512 #1 (13/M):
	- Binary code: SYNC -> 0000010100000101000101000
- Pressing OFF on unused wall switch WST-512 #1 (1/M):
	- Binary code: SYNC -> 0000010100000000000101000
- Pressing ON on unused wall switch WST-512 #1 (1/M):
	- Binary code: SYNC -> 0000010100000000000101010
- Pressing ON on unused wall switch WST-512 #1 (2/M):
	- Binary code: SYNC -> 0000010101000000000101010
- Pressing ON on unused wall switch WST-512 #1 (4/M):
	- Binary code: SYNC -> 0000010100010000000101010
- Pressing ON on unused wall switch WST-512 #1 (4/M):
	- Binary code: SYNC -> 0000010101010000000101010
- Pressing ON on unused wall switch WST-512 #1 (5/M):
	- Binary code: SYNC -> 0000010100000100000101010
- Pressing ON on unused wall switch WST-512 #1 (15/M):
	- Binary code: SYNC -> 0000010100010101000101010
- Pressing ON on unused wall switch WST-512 #1 (16/M):
	- Binary code: SYNC -> 0000010101010101000101010
- Pressing ON on unused wall switch WST-512 #1 (1/A):
	- Binary code: SYNC -> 0000000000000000000101010
- Pressing ON on unused wall switch WST-512 #1 (1/P):
	- Binary code: SYNC -> 0101010100000000000101010
- Pressing ON on unused wall switch WST-512 #1 (1/O):
	- Binary code: SYNC -> 0001010100000000000101010
- Pressing ON on unused wall switch WST-512 #1 (1/B):
	- Binary code: SYNC -> 0100000000000000000101010

Combining the above observations with the explanation on
http://svn.telldus.com/svn/rf_ctrl/nexa_2_6_driver/trunk/NexaProtocol.txt,
we have the following:

- The last '0' in the above bit sequences is actually the start of the
  next SYNC.
- A SYNC is a SHORT (.35 ms) HIGH followed by a VERY LONG (10.9ms) LOW.
- A '0' data bit is a SHORT HIGH -> LONG (1.05ms) LOW -> SHORT HIGH ->
  LONG LOW (i.e. a "00" from the above bit sequences)
- A '1' data bit is a SHORT HIGH -> LONG LOW -> LONG HIGH -> SHORT LOW
  (i.e. a "01" from the above bit sequence).
- We then have, for unused wall switch WST-512 #1:
	-  1/A/ON:  SYNC -> 000000000111
	-  1/B/ON:  SYNC -> 100000000111
	-  1/O/ON:  SYNC -> 011100000111
	-  1/P/ON:  SYNC -> 111100000111
	-  1/M/ON:  SYNC -> 001100000111
	-  2/M/ON:  SYNC -> 001110000111
	- 15/M/ON:  SYNC -> 001101110111
	- 16/M/ON:  SYNC -> 001111110111
	-  1/M/ON:  SYNC -> 001100000111
	-  1/M/OFF: SYNC -> 001100000110
- And for unused wall switch WST-512 #2:
	-  1/A/OFF: SYNC -> 000000000110
	-  1/A/ON:  SYNC -> 000000000111
	- 16/P/ON:  SYNC -> 111111110111

- Summary:
	- This is a 12 bit code, LSB first, formatted as follows:
	  AAAABBBBXXXC
	- AAAA is the letter code selected on the transmitter
          (A -> 0000, B -> 1000, ... O -> 0111, P -> 1111)
	- BBBB is the number code selected on the transmitter
          (1 -> 0000, 2 -> 1000, ... 15 -> 0111, 16 -> 1111)
	- XXX is unknkown, but AFAICS always 011
	- C indicates ON/OFF state, ON -> 1, OFF -> 0


Now, trying to create an algorithm for parsing both pulse formats
-----------------------------------------------------------------

From the first pulse format (format A), we have the following pulse
lengths:
	- ~10150µs LOW (SYNC part 1/4)
	-  ~2643µs LOW (SYNC part 3/4)
	-  ~1236µs LOW (data bit part 1/4 ('1') or 3/4 ('0'))
	-   ~215µs LOW (data bit part 1/4 ('0') or 3/4 ('1'))
	-   ~310µs HIGH (all HIGH pulses are this long)

From the second pulse format (format B), we have the following pulse
lengths:
	- ~10900µs LOW (SYNC part 2/2)
	-  ~1050µs LOW (data bit part 2/4 and maybe 4/4 ('0'))
	-   ~350µs LOW (data bit part 4/4 ('1'))
	-  ~1050µs HIGH (data bit part 3/4 ('1'))
	-   ~350µs HIGH (SYNC part 1/2, data bit part 1/4 and maybe 3/4 ('0'))
